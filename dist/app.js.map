{"version":3,"sources":["../app.js"],"names":["express","require","hbs","bodyParser","text","db","worker","app","registerPartials","__dirname","set","use","urlencoded","extended","json","static","get","req","res","render","term","params","inst","send","subject","getSpecificCourse","classNum","classes","post","query","body","institution","topic","class_num","phone","carrier","error","response","console","emailConfirmation","twilio","redirect","listen","log"],"mappings":"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","file":"app.js","sourcesContent":["const express = require('express');\nconst hbs = require('hbs');\nconst bodyParser = require('body-parser');\nconst text = require('./text');\nconst db = require('./db/index');\nconst worker = require('./worker');\n\nlet app = express();\n\nhbs.registerPartials(__dirname + '/views/partials');\napp.set('view engine', 'hbs');\n\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\n\napp.use(express.static(__dirname + '/public'));\n\napp.get('/', (req, res) => {\n    res.render('index.hbs');\n});\n\napp.get('/subjects/:inst', async (req, res) => {\n    let term = await worker.term(req.params.inst);\n    res.send(term);\n});\n\napp.get('/subjects/:inst/:term', async (req, res) => {\n    let subject = await worker.subject(req.params.inst, req.params.term);\n    res.send(subject);\n});\napp.get('/subjects/:inst/:term/:subject/:classNum', async(req, res) => {\n    let classes = await worker.getSpecificCourse(req.params.inst, req.params.term, req.params.subject, req.params.classNum);\n    res.send(classes);\n});\n\napp.post('/add', (req, res) => {\n    db.query(\"INSERT INTO classes (institution, term, subject, topic, class_num, phone, carrier) VALUES ($1, $2, $3, $4, $5, $6, $7)\",\n        [req.body.institution, req.body.term, req.body.subject, req.body.topic, req.body.class_num, req.body.phone, req.body.carrier], (error, response) => {\n        if (error){\n            return console.error('Error inserting into database: ', error);\n        }\n    });\n    if(req.body.carrier === '@tmomail.net' || req.body.carrier === '@mymetropcs.com'){\n        text.emailConfirmation(`${req.body.phone}${req.body.carrier}`, `Your classes have been added.`);\n    } else {\n        text.twilio(`${req.body.phone}`, `Your classes have been added.`);\n    }\n    res.redirect('/');\n});\n\napp.listen(3000, function(){\n    console.log(`Server started on port 3000`);\n});"]}