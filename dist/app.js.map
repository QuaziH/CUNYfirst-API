{"version":3,"sources":["../app.js"],"names":["express","require","hbs","bodyParser","db","worker","app","registerPartials","__dirname","set","use","urlencoded","extended","json","static","get","req","res","render","console","log","params","subject","inst","term","test","send","post","query","body","phone","institution","class_num","error","response","redirect","listen"],"mappings":";;;;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,MAAMD,QAAQ,KAAR,CAAZ;AACA,IAAME,aAAaF,QAAQ,aAAR,CAAnB;AACA,IAAMG,KAAKH,QAAQ,YAAR,CAAX;AACA,IAAMI,SAASJ,QAAQ,UAAR,CAAf;;AAEA,IAAIK,MAAMN,SAAV;;AAEAE,IAAIK,gBAAJ,CAAqBC,YAAY,iBAAjC;AACAF,IAAIG,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AAEAH,IAAII,GAAJ,CAAQP,WAAWQ,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAN,IAAII,GAAJ,CAAQP,WAAWU,IAAX,EAAR;;AAEAP,IAAII,GAAJ,CAAQV,QAAQc,MAAR,CAAeN,YAAY,QAA3B,CAAR;;AAEAF,IAAIS,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvBA,QAAIC,MAAJ,CAAW,WAAX;AACH,CAFD;;AAIAZ,IAAIS,GAAJ,CAAQ,uBAAR;AAAA,uEAAiC,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7BE,gCAAQC,GAAR,CAAYJ,IAAIK,MAAhB;AAD6B;AAAA,+BAEZhB,OAAOiB,OAAP,CAAeN,IAAIK,MAAJ,CAAWE,IAA1B,EAAgCP,IAAIK,MAAJ,CAAWG,IAA3C,CAFY;;AAAA;AAEzBC,4BAFyB;;AAG7BN,gCAAQC,GAAR,CAAYK,IAAZ;AACAR,4BAAIS,IAAJ,CAASD,IAAT;;AAJ6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjC;;AAAA;AAAA;AAAA;AAAA;;AAOAnB,IAAIqB,IAAJ,CAAS,MAAT,EAAiB,UAACX,GAAD,EAAMC,GAAN,EAAc;AAC3Bb,OAAGwB,KAAH,CAAS,gGAAT,EACI,CAACZ,IAAIa,IAAJ,CAASC,KAAV,EAAiBd,IAAIa,IAAJ,CAASE,WAA1B,EAAuCf,IAAIa,IAAJ,CAASL,IAAhD,EAAsDR,IAAIa,IAAJ,CAASP,OAA/D,EAAwEN,IAAIa,IAAJ,CAASG,SAAjF,CADJ,EACiG,UAACC,KAAD,EAAQC,QAAR,EAAqB;AAClHf,gBAAQC,GAAR,CAAYJ,IAAIa,IAAJ,CAASC,KAArB;AACA,YAAIG,KAAJ,EAAU;AACN,mBAAOd,QAAQc,KAAR,CAAc,iCAAd,EAAiDA,KAAjD,CAAP;AACH;AACJ,KAND;AAOAhB,QAAIkB,QAAJ,CAAa,GAAb;AACH,CATD;;AAWA7B,IAAI8B,MAAJ,CAAW,IAAX,EAAiB,YAAU;AACvBjB,YAAQC,GAAR;AACH,CAFD","file":"app.js","sourcesContent":["const express = require('express');\nconst hbs = require('hbs');\nconst bodyParser = require('body-parser');\nconst db = require('./db/index');\nconst worker = require('./worker');\n\nlet app = express();\n\nhbs.registerPartials(__dirname + '/views/partials');\napp.set('view engine', 'hbs');\n\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\n\napp.use(express.static(__dirname + 'public'));\n\napp.get('/', (req, res) => {\n    res.render('index.hbs');\n});\n\napp.get('/subjects/:inst/:term', async (req, res) => {\n    console.log(req.params);\n    let test = await worker.subject(req.params.inst, req.params.term);\n    console.log(test);\n    res.send(test);\n});\n\napp.post('/add', (req, res) => {\n    db.query(\"INSERT INTO classes (phone, institution, term, subject, class_num) VALUES ($1, $2, $3, $4, $5)\",\n        [req.body.phone, req.body.institution, req.body.term, req.body.subject, req.body.class_num], (error, response) => {\n        console.log(req.body.phone);\n        if (error){\n            return console.error('Error inserting into database: ', error);\n        }\n    });\n    res.redirect('/');\n});\n\napp.listen(3000, function(){\n    console.log(`Server started on port 3000`);\n});"]}