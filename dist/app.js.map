{"version":3,"sources":["../app.js"],"names":["express","require","hbs","bodyParser","text","db","worker","nodemailer","port","process","env","PORT","app","set","registerPartials","__dirname","use","urlencoded","extended","json","static","get","req","res","render","term","params","inst","send","subject","getSpecificCourse","courseNum","classes","query","subj","topic","classNum","phone","carrier","error","response","status","emailConfirmation","twilio","end","post","console","log","body","email","transporter","createTransport","service","auth","user","EMAIL","pass","EPASSWORD","mailOptions","from","first","last","to","message","sendMail","info","close","redirect","listen"],"mappings":";;;;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,MAAMD,QAAQ,KAAR,CAAZ;AACA,IAAME,aAAaF,QAAQ,aAAR,CAAnB;AACA,IAAMG,OAAOH,QAAQ,QAAR,CAAb;AACA,IAAMI,KAAKJ,QAAQ,YAAR,CAAX;AACA,IAAMK,SAASL,QAAQ,UAAR,CAAf;AACA,IAAMM,aAAaN,QAAQ,YAAR,CAAnB;;AAEA,IAAMO,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;;AAEA,IAAIC,MAAMZ,SAAV;;AAEAY,IAAIC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAX,IAAIY,gBAAJ,CAAqBC,YAAY,iBAAjC;;AAEAH,IAAII,GAAJ,CAAQb,WAAWc,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAN,IAAII,GAAJ,CAAQb,WAAWgB,IAAX,EAAR;;AAEAP,IAAII,GAAJ,CAAQhB,QAAQoB,MAAR,CAAeL,YAAY,SAA3B,CAAR;;AAEAH,IAAIS,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvBA,QAAIC,MAAJ,CAAW,WAAX;AACH,CAFD;;AAIAZ,IAAIS,GAAJ,CAAQ,OAAR,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3BA,QAAIC,MAAJ,CAAW,UAAX;AACH,CAFD;;AAIAZ,IAAIS,GAAJ,CAAQ,UAAR,EAAoB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC9BA,QAAIC,MAAJ,CAAW,aAAX;AACH,CAFD;;AAIAZ,IAAIS,GAAJ,CAAQ,uBAAR,EAAiC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3CA,QAAIC,MAAJ,CAAW,0BAAX;AACH,CAFD;;AAIAZ,IAAIS,GAAJ,CAAQ,iBAAR;AAAA,uEAA2B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACNjB,OAAOmB,IAAP,CAAYH,IAAII,MAAJ,CAAWC,IAAvB,CADM;;AAAA;AACnBF,4BADmB;;AAEvBF,4BAAIK,IAAJ,CAASH,IAAT;;AAFuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA3B;;AAAA;AAAA;AAAA;AAAA;;AAKAb,IAAIS,GAAJ,CAAQ,uBAAR;AAAA,wEAAiC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACTjB,OAAOuB,OAAP,CAAeP,IAAII,MAAJ,CAAWC,IAA1B,EAAgCL,IAAII,MAAJ,CAAWD,IAA3C,CADS;;AAAA;AACzBI,+BADyB;;AAE7BN,4BAAIK,IAAJ,CAASC,OAAT;;AAF6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjC;;AAAA;AAAA;AAAA;AAAA;AAIAjB,IAAIS,GAAJ,CAAQ,2CAAR;AAAA,wEAAqD,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAC7BjB,OAAOwB,iBAAP,CAAyBR,IAAII,MAAJ,CAAWC,IAApC,EAA0CL,IAAII,MAAJ,CAAWD,IAArD,EAA2DH,IAAII,MAAJ,CAAWG,OAAtE,EAA+EP,IAAII,MAAJ,CAAWK,SAA1F,CAD6B;;AAAA;AAC7CC,+BAD6C;;AAEjDT,4BAAIK,IAAJ,CAASI,OAAT;;AAFiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAArD;;AAAA;AAAA;AAAA;AAAA;;AAKApB,IAAIS,GAAJ,CAAQ,yDAAR;AAAA,wEAAmE,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAC/DlB,2BAAG4B,KAAH,CAAS,wHAAT,EACI,CAACX,IAAII,MAAJ,CAAWC,IAAZ,EAAkBL,IAAII,MAAJ,CAAWD,IAA7B,EAAmCH,IAAII,MAAJ,CAAWQ,IAA9C,EAAoDZ,IAAII,MAAJ,CAAWS,KAA/D,EAAsEb,IAAII,MAAJ,CAAWU,QAAjF,EAA2Fd,IAAII,MAAJ,CAAWW,KAAtG,EAA6Gf,IAAII,MAAJ,CAAWY,OAAxH,CADJ,EACsI,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACnJ,gCAAID,KAAJ,EAAU;AACN,uCAAOhB,IAAIkB,MAAJ,CAAW,GAAX,EAAgBb,IAAhB,qCAAuDW,KAAvD,CAAP;AACH;AACJ,yBALL;AAMA,4BAAGjB,IAAII,MAAJ,CAAWY,OAAX,KAAuB,cAAvB,IAAyChB,IAAII,MAAJ,CAAWY,OAAX,KAAuB,iBAAnE,EAAqF;AACjFlC,iCAAKsC,iBAAL,MAA0BpB,IAAII,MAAJ,CAAWW,KAArC,GAA6Cf,IAAII,MAAJ,CAAWY,OAAxD,kBAAiFhB,IAAII,MAAJ,CAAWS,KAA5F,UAAsGb,IAAII,MAAJ,CAAWU,QAAjH;AACH,yBAFD,MAEO;AACHhC,iCAAKuC,MAAL,MAAerB,IAAII,MAAJ,CAAWW,KAA1B,kBAAiDf,IAAII,MAAJ,CAAWS,KAA5D,UAAsEb,IAAII,MAAJ,CAAWU,QAAjF;AACH;AACDb,4BAAIqB,GAAJ,CAAQ,SAAR;;AAZ+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAnE;;AAAA;AAAA;AAAA;AAAA;;AAeAhC,IAAIiC,IAAJ,CAAS,UAAT,EAAqB,UAACvB,GAAD,EAAMC,GAAN,EAAc;AAC/BuB,YAAQC,GAAR,CAAYzB,IAAI0B,IAAJ,CAASC,KAArB;AACA;AACA,QAAIC,cAAc3C,WAAW4C,eAAX,CAA2B;AACzCC,iBAAS,OADgC;AAEzCC,cAAM;AACFC,kBAAM7C,QAAQC,GAAR,CAAY6C,KADhB;AAEFC,kBAAM/C,QAAQC,GAAR,CAAY+C;AAFhB;AAFmC,KAA3B,CAAlB;;AAQA,QAAIC,cAAc;AACdC,cAASrC,IAAI0B,IAAJ,CAASY,KAAlB,SAA2BtC,IAAI0B,IAAJ,CAASa,IAApC,UAA6CvC,IAAI0B,IAAJ,CAASC,KAAtD,MADc;AAEda,qCAFc;AAGdjC,iBAASP,IAAI0B,IAAJ,CAASnB,OAHJ;AAIdzB,cAASkB,IAAI0B,IAAJ,CAASe,OAAlB,cAAkCzC,IAAI0B,IAAJ,CAASY,KAA3C,SAAoDtC,IAAI0B,IAAJ,CAASa,IAA7D,SAAqEvC,IAAI0B,IAAJ,CAASC;AAJhE,KAAlB;;AAOAC,gBAAYc,QAAZ,CAAqBN,WAArB,EAAkC,UAACnB,KAAD,EAAQ0B,IAAR,EAAiB;AAC/C,YAAI1B,KAAJ,EAAW;AACPO,oBAAQC,GAAR,CAAYR,KAAZ;AACH;AACD;AACAW,oBAAYgB,KAAZ;AACH,KAND;AAOA3C,QAAI4C,QAAJ,CAAa,uBAAb;AACH,CA1BD;;AA4BAvD,IAAIwD,MAAJ,CAAW5D,IAAX,EAAiB,YAAU;AACvBsC,YAAQC,GAAR,6BAAsCvC,IAAtC;AACH,CAFD","file":"app.js","sourcesContent":["const express = require('express');\nconst hbs = require('hbs');\nconst bodyParser = require('body-parser');\nconst text = require('./text');\nconst db = require('./db/index');\nconst worker = require('./worker');\nconst nodemailer = require('nodemailer');\n\nconst port = process.env.PORT || 3000;\n\nlet app = express();\n\napp.set('view engine', 'hbs');\nhbs.registerPartials(__dirname + '/views/partials');\n\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\n\napp.use(express.static(__dirname + '/public'));\n\napp.get('/', (req, res) => {\n    res.render('index.hbs');\n});\n\napp.get('/help', (req, res) => {\n    res.render('help.hbs');\n});\n\napp.get('/contact', (req, res) => {\n    res.render('contact.hbs');\n});\n\napp.get('/contact-confirmation', (req, res) => {\n    res.render('contact-confirmation.hbs');\n});\n\napp.get('/subjects/:inst', async (req, res) => {\n    let term = await worker.term(req.params.inst);\n    res.send(term);\n});\n\napp.get('/subjects/:inst/:term', async (req, res) => {\n    let subject = await worker.subject(req.params.inst, req.params.term);\n    res.send(subject);\n});\napp.get('/subjects/:inst/:term/:subject/:courseNum', async (req, res) => {\n    let classes = await worker.getSpecificCourse(req.params.inst, req.params.term, req.params.subject, req.params.courseNum);\n    res.send(classes);\n});\n\napp.get('/add/:inst/:term/:subj/:topic/:classNum/:phone/:carrier', async (req, res) => {\n    db.query(\"INSERT INTO classes (institution, term, subject, topic, class_num, phone, carrier) VALUES ($1, $2, $3, $4, $5, $6, $7)\",\n        [req.params.inst, req.params.term, req.params.subj, req.params.topic, req.params.classNum, req.params.phone, req.params.carrier], (error, response) => {\n            if (error){\n                return res.status(500).send(`Error inserting into database: ${error}`);\n            }\n        });\n    if(req.params.carrier === '@tmomail.net' || req.params.carrier === '@mymetropcs.com'){\n        text.emailConfirmation(`${req.params.phone}${req.params.carrier}`, `Your class ${req.params.topic}- ${req.params.classNum} has been added.`);\n    } else {\n        text.twilio(`${req.params.phone}`, `Your class ${req.params.topic}- ${req.params.classNum} has been added.`);\n    }\n    res.end('Success');\n});\n\napp.post('/contact', (req, res) => {\n    console.log(req.body.email);\n    // text.emailContact(`${req.body.first}${req.body.last}, ${req.body.email}`, `${req.body.subject}`, `${req.body.message} \\n - ${req.body.first} ${req.body.last} ${req.body.email}`);\n    let transporter = nodemailer.createTransport({\n        service: 'Gmail',\n        auth: {\n            user: process.env.EMAIL,\n            pass: process.env.EPASSWORD\n        }\n    });\n\n    let mailOptions = {\n        from: `${req.body.first} ${req.body.last} <${req.body.email}>`,\n        to: `noclosedclass@gmail.com`,\n        subject: req.body.subject,\n        text: `${req.body.message} \\n - ${req.body.first} ${req.body.last} ${req.body.email}`\n    };\n\n    transporter.sendMail(mailOptions, (error, info) => {\n        if (error) {\n            console.log(error);\n        }\n        // console.log('Message sent: %s', info.messageId);\n        transporter.close();\n    });\n    res.redirect('/contact-confirmation');\n});\n\napp.listen(port, function(){\n    console.log(`Server started on port ${port}`);\n});"]}