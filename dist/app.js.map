{"version":3,"sources":["../app.js"],"names":["express","require","hbs","bodyParser","db","app","set","use","urlencoded","extended","json","static","__dirname","get","req","res","render","post","query","body","phone","institution","term","subject","class_num","error","response","console","log","redirect","listen"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,MAAMD,QAAQ,KAAR,CAAZ;AACA,IAAME,aAAaF,QAAQ,aAAR,CAAnB;AACA,IAAMG,KAAKH,QAAQ,YAAR,CAAX;;AAEA,IAAII,MAAML,SAAV;;AAEAK,IAAIC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AAEAD,IAAIE,GAAJ,CAAQJ,WAAWK,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAJ,IAAIE,GAAJ,CAAQJ,WAAWO,IAAX,EAAR;;AAEAL,IAAIE,GAAJ,CAAQP,QAAQW,MAAR,CAAeC,YAAY,QAA3B,CAAR;;AAEAP,IAAIQ,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACxBA,QAAIC,MAAJ,CAAW,WAAX;AACF,CAFD;;AAIAX,IAAIY,IAAJ,CAAS,MAAT,EAAiB,UAACH,GAAD,EAAMC,GAAN,EAAc;AAC3B;;AAEAX,OAAGc,KAAH,CAAS,gGAAT,EACI,CAACJ,IAAIK,IAAJ,CAASC,KAAV,EAAiBN,IAAIK,IAAJ,CAASE,WAA1B,EAAuCP,IAAIK,IAAJ,CAASG,IAAhD,EAAsDR,IAAIK,IAAJ,CAASI,OAA/D,EAAwET,IAAIK,IAAJ,CAASK,SAAjF,CADJ,EACiG,UAACC,KAAD,EAAQC,QAAR,EAAqB;AAClHC,gBAAQC,GAAR,CAAYd,IAAIK,IAAJ,CAASC,KAArB;AACA,YAAIK,KAAJ,EAAU;AACN,mBAAOE,QAAQF,KAAR,CAAc,uBAAd,EAAuCA,KAAvC,CAAP;AACH;AACJ,KAND;AAOAV,QAAIc,QAAJ,CAAa,GAAb;AACH,CAXD;;AAaAxB,IAAIyB,MAAJ,CAAW,IAAX,EAAiB,YAAU;AACvBH,YAAQC,GAAR;AACH,CAFD","file":"app.js","sourcesContent":["const express = require('express');\nconst hbs = require('hbs');\nconst bodyParser = require('body-parser');\nconst db = require('./db/index');\n\nlet app = express();\n\napp.set('view engine', 'hbs');\n\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\n\napp.use(express.static(__dirname + 'public'));\n\napp.get('/', (req, res) => {\n   res.render('index.hbs');\n});\n\napp.post('/add', (req, res) => {\n    // res.render('index.hbs');\n\n    db.query(\"INSERT INTO classes (phone, institution, term, subject, class_num) VALUES ($1, $2, $3, $4, $5)\",\n        [req.body.phone, req.body.institution, req.body.term, req.body.subject, req.body.class_num], (error, response) => {\n        console.log(req.body.phone);\n        if (error){\n            return console.error('Error fetching client', error);\n        }\n    });\n    res.redirect('/');\n});\n\napp.listen(3000, function(){\n    console.log(`Server started on port 3000`);\n});"]}