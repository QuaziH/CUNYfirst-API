{"version":3,"sources":["../looper.js"],"names":["require","config","db","api","query","error","response","console","log","i","getAllSections","rows","institution","term","subject","allClasses","j","length","status","class_num","Status","err"],"mappings":";;;;AAAAA,QAAQ,QAAR,EAAkBC,MAAlB;AACA,IAAMC,KAAKF,QAAQ,YAAR,CAAX;AACA;AACA,IAAMG,MAAMH,QAAQ,UAAR,CAAZ;;AAEAE,GAAGE,KAAH;AAAA,uEAAoE,iBAAOC,KAAP,EAAcC,QAAd;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6BAC5DD,KAD4D;AAAA;AAAA;AAAA;;AAAA,0DAErDE,QAAQF,KAAR,CAAc,uBAAd,EAAuCA,KAAvC,CAFqD;;AAAA;AAIhEE,gCAAQC,GAAR,CAAYF,QAAZ;AAJgE,oFAKxDG,CALwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAMrCN,IAAIO,cAAJ,MAAsBJ,SAASK,IAAT,CAAcF,CAAd,EAAiBG,WAAvC,OAAyDN,SAASK,IAAT,CAAcF,CAAd,EAAiBI,IAA1E,OAAqFP,SAASK,IAAT,CAAcF,CAAd,EAAiBK,OAAtG,CANqC;;AAAA;AAMxDC,sDANwD;;AAO5Db,+CAAGE,KAAH,wEAA6EE,SAASK,IAAT,CAAcF,CAAd,EAAiBG,WAA9F,sBAAwHN,SAASK,IAAT,CAAcF,CAAd,EAAiBI,IAAzI,yBAA+JP,SAASK,IAAT,CAAcF,CAAd,EAAiBK,OAAhL,SAA4L,UAACT,KAAD,EAAQC,QAAR,EAAqB;AAC7M,oDAAID,KAAJ,EAAW;AACP,2DAAOE,QAAQF,KAAR,CAAc,uBAAd,EAAuCA,KAAvC,CAAP;AACH;;AAED,qDAAI,IAAIW,IAAI,CAAZ,EAAeA,IAAIV,SAASK,IAAT,CAAcM,MAAjC,EAAyCD,GAAzC,EAA8C;AAC1C,wDAAIE,eAAJ;AACA,wDAAI;AACAA,iEAASH,WAAWT,SAASK,IAAT,CAAcK,CAAd,EAAiBG,SAA5B,EAAuCC,MAAhD;AACH,qDAFD,CAEE,OAAOC,GAAP,EAAY;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AACDd,4DAAQC,GAAR,CAAeF,SAASK,IAAT,CAAcK,CAAd,EAAiBG,SAAhC,SAA6CD,MAA7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AACJ,6CApCD;;AAP4D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKxDT,yBALwD,GAKpD,CALoD;;AAAA;AAAA,8BAKjDA,IAAIH,SAASK,IAAT,CAAcM,MAL+B;AAAA;AAAA;AAAA;;AAAA,6DAKxDR,CALwD;;AAAA;AAKvBA,2BALuB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAApE;;AAAA;AAAA;AAAA;AAAA","file":"looper.js","sourcesContent":["require('dotenv').config();\nconst db = require('./db/index');\n// const text = require('./text');\nconst api = require('./cf-api');\n\ndb.query(`SELECT DISTINCT institution, term, subject FROM classes`, async (error, response) => {\n    if (error){\n        return console.error('Error fetching client', error);\n    }\n    console.log(response);\n    for(let i = 0; i < response.rows.length; i++){\n        let allClasses = await api.getAllSections(`${response.rows[i].institution}`, `${response.rows[i].term}`, `${response.rows[i].subject}`);\n        db.query(`SELECT phone, carrier, class_num FROM classes WHERE institution='${response.rows[i].institution}' AND term='${response.rows[i].term}' AND subject='${response.rows[i].subject}'`, (error, response) => {\n            if (error) {\n                return console.error('Error fetching client', error);\n            }\n\n            for(let j = 0; j < response.rows.length; j++) {\n                let status;\n                try {\n                    status = allClasses[response.rows[j].class_num].Status;\n                } catch (err) {\n                    //text them that their class might not exist anymore in CUNYfirst\n                    //delete\n                    // db.query(`DELETE FROM classes WHERE phone='${response.row[j].phone}' AND class_num=${response.row[j].class_num}`, (err, res) => {\n                    //     if(err) {\n                    //         console.error(`Error deleting from database: ${err}`);\n                    //     }\n                    // });\n                }\n                console.log(`${response.rows[j].class_num} ${status}`);\n                //\n                // if(status === 'Closed') {\n                //     //do nothing...?\n                // } else if (status === 'Open'){\n                //     //text\n                //     //delete by class num and phone num\n                //     db.query(`DELETE FROM classes WHERE phone='${response.row[j].phone}' AND class_num=${response.row[j].class_num}`, (err, res) => {\n                //         if(err) {\n                //             console.error(`Error deleting from database: ${err}`);\n                //         }\n                //     });\n                // } else {\n                //     //text if status doesn't exist\n                //     //delete\n                //     //^ might not need this cause of catch\n                // }\n            }\n        });\n    }\n});"]}