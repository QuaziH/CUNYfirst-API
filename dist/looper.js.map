{"version":3,"sources":["../looper.js"],"names":["db","require","api","query","error","response","console","i","getAllSections","rows","institution","term","subject","allClasses","j","length","status","class_num","Status","log"],"mappings":";;;;AAAA,IAAMA,KAAKC,QAAQ,YAAR,CAAX;AACA;AACA,IAAMC,MAAMD,QAAQ,UAAR,CAAZ;;AAEAD,GAAGG,KAAH;AAAA,uEAAoE,iBAAOC,KAAP,EAAcC,QAAd;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6BAC5DD,KAD4D;AAAA;AAAA;AAAA;;AAAA,0DAErDE,QAAQF,KAAR,CAAc,uBAAd,EAAuCA,KAAvC,CAFqD;;AAAA;AAAA,oFAKxDG,CALwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAMrCL,IAAIM,cAAJ,MAAsBH,SAASI,IAAT,CAAcF,CAAd,EAAiBG,WAAvC,OAAyDL,SAASI,IAAT,CAAcF,CAAd,EAAiBI,IAA1E,OAAqFN,SAASI,IAAT,CAAcF,CAAd,EAAiBK,OAAtG,CANqC;;AAAA;AAMxDC,sDANwD;;AAO5Db,+CAAGG,KAAH,wDAA6DE,SAASI,IAAT,CAAcF,CAAd,EAAiBG,WAA9E,sBAAwGL,SAASI,IAAT,CAAcF,CAAd,EAAiBI,IAAzH,yBAA+IN,SAASI,IAAT,CAAcF,CAAd,EAAiBK,OAAhK,SAA2K,UAACR,KAAD,EAAQC,QAAR,EAAqB;AAC5L,oDAAID,KAAJ,EAAW;AACP,2DAAOE,QAAQF,KAAR,CAAc,uBAAd,EAAuCA,KAAvC,CAAP;AACH;AACD;AACA,qDAAI,IAAIU,IAAI,CAAZ,EAAeA,IAAIT,SAASI,IAAT,CAAcM,MAAjC,EAAyCD,GAAzC,EAA8C;AAC1C,wDAAIE,SAASH,WAAWR,SAASI,IAAT,CAAcK,CAAd,EAAiBG,SAA5B,EAAuCC,MAApD;AACAZ,4DAAQa,GAAR,CAAed,SAASI,IAAT,CAAcK,CAAd,EAAiBG,SAAhC,SAA6CD,MAA7C;AACA,wDAAGA,WAAW,QAAd,EAAwB;AACpB;AACH,qDAFD,MAEO,IAAIA,WAAW,MAAf,EAAsB;AACzB;AACA;AACH,qDAHM,MAGA;AACH;AACA;AACH;AACJ;AACJ,6CAlBD;;AAP4D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKxDT,yBALwD,GAKpD,CALoD;;AAAA;AAAA,8BAKjDA,IAAIF,SAASI,IAAT,CAAcM,MAL+B;AAAA;AAAA;AAAA;;AAAA,6DAKxDR,CALwD;;AAAA;AAKvBA,2BALuB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAApE;;AAAA;AAAA;AAAA;AAAA;;AA6BA;AACA;AACA;AACA;AACA;AACA","file":"looper.js","sourcesContent":["const db = require('./db/index');\n// const text = require('./text');\nconst api = require('./cf-api');\n\ndb.query(`SELECT DISTINCT institution, term, subject FROM classes`, async (error, response) => {\n    if (error){\n        return console.error('Error fetching client', error);\n    }\n    // console.log(response.rows);\n    for(let i = 0; i < response.rows.length; i++){\n        let allClasses = await api.getAllSections(`${response.rows[i].institution}`, `${response.rows[i].term}`, `${response.rows[i].subject}`);\n        db.query(`SELECT class_num FROM classes WHERE institution='${response.rows[i].institution}' AND term='${response.rows[i].term}' AND subject='${response.rows[i].subject}'`,(error, response) => {\n            if (error) {\n                return console.error('Error fetching client', error);\n            }\n            // console.log(response);\n            for(let j = 0; j < response.rows.length; j++) {\n                let status = allClasses[response.rows[j].class_num].Status;\n                console.log(`${response.rows[j].class_num} ${status}`);\n                if(status === 'Closed') {\n                    //go to the next number\n                } else if (status === 'Open'){\n                    //text\n                    //delete by class num and phone num\n                } else {\n                    //text if status doesn't exist\n                    //delete\n                }\n            }\n        });\n    }\n});\n\n// db.query(\"SELECT phone FROM classes WHERE institution='QNS01' AND term='1182' AND subject='CSCI'\",(error, response) => {\n//     if (error) {\n//         return console.error('Error fetching client', error);\n//     }\n//     console.log(response);\n// });"]}