{"version":3,"sources":["../looper.js"],"names":["db","require","text","api","query","error","response","console","i","getAllSections","rows","institution","term","subject","allClasses","j","length","status","class_num","Status","e","carrier","emailError","phone","topic","twilio","err","res","log","emailOpen"],"mappings":";;;;AAAA,IAAMA,KAAKC,QAAQ,YAAR,CAAX;AACA,IAAMC,OAAOD,QAAQ,QAAR,CAAb;AACA,IAAME,MAAMF,QAAQ,UAAR,CAAZ;;AAEAD,GAAGI,KAAH;AAAA,uEAAoE,iBAAOC,KAAP,EAAcC,QAAd;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6BAC5DD,KAD4D;AAAA;AAAA;AAAA;;AAAA,0DAErDE,QAAQF,KAAR,CAAc,uBAAd,EAAuCA,KAAvC,CAFqD;;AAAA;AAAA,oFAKxDG,CALwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAMrCL,IAAIM,cAAJ,MAAsBH,SAASI,IAAT,CAAcF,CAAd,EAAiBG,WAAvC,OAAyDL,SAASI,IAAT,CAAcF,CAAd,EAAiBI,IAA1E,OAAqFN,SAASI,IAAT,CAAcF,CAAd,EAAiBK,OAAtG,CANqC;;AAAA;AAMxDC,sDANwD;;AAO5Dd,+CAAGI,KAAH,+EAAoFE,SAASI,IAAT,CAAcF,CAAd,EAAiBG,WAArG,sBAA+HL,SAASI,IAAT,CAAcF,CAAd,EAAiBI,IAAhJ,yBAAsKN,SAASI,IAAT,CAAcF,CAAd,EAAiBK,OAAvL,SAAmM,UAACR,KAAD,EAAQC,QAAR,EAAqB;AACpN,oDAAID,KAAJ,EAAW;AACP,2DAAOE,QAAQF,KAAR,CAAc,uBAAd,EAAuCA,KAAvC,CAAP;AACH;;AAED,qDAAI,IAAIU,IAAI,CAAZ,EAAeA,IAAIT,SAASI,IAAT,CAAcM,MAAjC,EAAyCD,GAAzC,EAA8C;AAC1C,wDAAIE,eAAJ;AACA,wDAAI;AACAA,iEAASH,WAAWR,SAASI,IAAT,CAAcK,CAAd,EAAiBG,SAA5B,EAAuCC,MAAhD;AACH,qDAFD,CAEE,OAAOC,CAAP,EAAU;AACR;AACA;AACA,4DAAGd,SAASI,IAAT,CAAcK,CAAd,EAAiBM,OAAjB,KAA6B,cAA7B,IAA+Cf,SAASI,IAAT,CAAcK,CAAd,EAAiBM,OAAjB,KAA6B,iBAA/E,EAAiG;AAC7FnB,iEAAKoB,UAAL,MAAmBhB,SAASI,IAAT,CAAcK,CAAd,EAAiBQ,KAApC,GAA4CjB,SAASI,IAAT,CAAcK,CAAd,EAAiBM,OAA7D,kBAAsFf,SAASI,IAAT,CAAcK,CAAd,EAAiBS,KAAvG,UAAiHlB,SAASI,IAAT,CAAcK,CAAd,EAAiBG,SAAlI;AACH,yDAFD,MAEO;AACH;AACAhB,iEAAKuB,MAAL,MAAenB,SAASI,IAAT,CAAcK,CAAd,EAAiBQ,KAAhC,4BAAiEjB,SAASI,IAAT,CAAcK,CAAd,EAAiBS,KAAlF,UAA4FlB,SAASI,IAAT,CAAcK,CAAd,EAAiBG,SAA7G;AACH;AACDlB,2DAAGI,KAAH,wCAA6CE,SAASI,IAAT,CAAcK,CAAd,EAAiBQ,KAA9D,yBAAsFjB,SAASI,IAAT,CAAcK,CAAd,EAAiBG,SAAvG,EAAoH,UAACQ,GAAD,EAAMC,GAAN,EAAc;AAC9H,gEAAGD,GAAH,EAAQ;AACJnB,wEAAQF,KAAR,oCAA+CqB,GAA/C;AACH;AACJ,yDAJD;AAKA;AACH;;AAED,wDAAGT,WAAW,QAAd,EAAwB;AACpB;AACAV,gEAAQqB,GAAR,4BAAqCtB,SAASI,IAAT,CAAcK,CAAd,EAAiBG,SAAtD;AACH,qDAHD,MAGO,IAAID,WAAW,MAAf,EAAsB;AACzB;AACA;AACA,4DAAGX,SAASI,IAAT,CAAcK,CAAd,EAAiBM,OAAjB,KAA6B,cAA7B,IAA+Cf,SAASI,IAAT,CAAcK,CAAd,EAAiBM,OAAjB,KAA6B,iBAA/E,EAAiG;AAC7FnB,iEAAK2B,SAAL,MAAkBvB,SAASI,IAAT,CAAcK,CAAd,EAAiBQ,KAAnC,GAA2CjB,SAASI,IAAT,CAAcK,CAAd,EAAiBM,OAA5D,kBAAqFf,SAASI,IAAT,CAAcK,CAAd,EAAiBS,KAAtG,UAAgHlB,SAASI,IAAT,CAAcK,CAAd,EAAiBG,SAAjI;AACH,yDAFD,MAEO;AACH;AACAhB,iEAAKuB,MAAL,MAAenB,SAASI,IAAT,CAAcK,CAAd,EAAiBQ,KAAhC,mCAAwEjB,SAASI,IAAT,CAAcK,CAAd,EAAiBS,KAAzF,UAAmGlB,SAASI,IAAT,CAAcK,CAAd,EAAiBG,SAApH;AACH;AACDlB,2DAAGI,KAAH,wCAA6CE,SAASI,IAAT,CAAcK,CAAd,EAAiBQ,KAA9D,yBAAsFjB,SAASI,IAAT,CAAcK,CAAd,EAAiBG,SAAvG,EAAoH,UAACQ,GAAD,EAAMC,GAAN,EAAc;AAC9H,gEAAGD,GAAH,EAAQ;AACJnB,wEAAQF,KAAR,oCAA+CqB,GAA/C;AACH;AACJ,yDAJD;AAKH;AACJ;AACJ,6CA7CD;;AAP4D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKxDlB,yBALwD,GAKpD,CALoD;;AAAA;AAAA,8BAKjDA,IAAIF,SAASI,IAAT,CAAcM,MAL+B;AAAA;AAAA;AAAA;;AAAA,6DAKxDR,CALwD;;AAAA;AAKvBA,2BALuB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAApE;;AAAA;AAAA;AAAA;AAAA","file":"looper.js","sourcesContent":["const db = require('./db/index');\nconst text = require('./text');\nconst api = require('./cf-api');\n\ndb.query(`SELECT DISTINCT institution, term, subject FROM classes`, async (error, response) => {\n    if (error){\n        return console.error('Error fetching client', error);\n    }\n    // console.log(response);\n    for(let i = 0; i < response.rows.length; i++){\n        let allClasses = await api.getAllSections(`${response.rows[i].institution}`, `${response.rows[i].term}`, `${response.rows[i].subject}`);\n        db.query(`SELECT phone, carrier, topic, class_num FROM classes WHERE institution='${response.rows[i].institution}' AND term='${response.rows[i].term}' AND subject='${response.rows[i].subject}'`, (error, response) => {\n            if (error) {\n                return console.error('Error fetching client', error);\n            }\n\n            for(let j = 0; j < response.rows.length; j++) {\n                let status;\n                try {\n                    status = allClasses[response.rows[j].class_num].Status;\n                } catch (e) {\n                    //text them that their class might not exist anymore in CUNYfirst\n                    //delete\n                    if(response.rows[j].carrier === '@tmomail.net' || response.rows[j].carrier === '@mymetropcs.com'){\n                        text.emailError(`${response.rows[j].phone}${response.rows[j].carrier}`, `Your class ${response.rows[j].topic}- ${response.rows[j].class_num} does not exist in CUNYfirst anymore`);\n                    } else {\n                        //twilio\n                        text.twilio(`${response.rows[j].phone}`, `Uh oh! \\n Your class ${response.rows[j].topic}- ${response.rows[j].class_num} does not exist in CUNYfirst anymore`);\n                    }\n                    db.query(`DELETE FROM classes WHERE phone='${response.rows[j].phone}' AND class_num=${response.rows[j].class_num}`, (err, res) => {\n                        if(err) {\n                            console.error(`Error deleting from database: ${err}`);\n                        }\n                    });\n                    continue;\n                }\n\n                if(status === 'Closed') {\n                    //do nothing...?\n                    console.log(`Class is still closed ${response.rows[j].class_num}`);\n                } else if (status === 'Open'){\n                    //text\n                    //delete by class num and phone num\n                    if(response.rows[j].carrier === '@tmomail.net' || response.rows[j].carrier === '@mymetropcs.com'){\n                        text.emailOpen(`${response.rows[j].phone}${response.rows[j].carrier}`, `Your class ${response.rows[j].topic}- ${response.rows[j].class_num} is now open!`);\n                    } else {\n                        //twilio\n                        text.twilio(`${response.rows[j].phone}`, `Class Opened! \\n Your class ${response.rows[j].topic}- ${response.rows[j].class_num} is now open!`);\n                    }\n                    db.query(`DELETE FROM classes WHERE phone='${response.rows[j].phone}' AND class_num=${response.rows[j].class_num}`, (err, res) => {\n                        if(err) {\n                            console.error(`Error deleting from database: ${err}`);\n                        }\n                    });\n                }\n            }\n        });\n    }\n});"]}