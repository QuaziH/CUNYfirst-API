{"version":3,"sources":["../text.js"],"names":["require","config","accountSid","process","env","ACCOUNT_SID","authToken","AUTH_TOKEN","nodemailer","htmlToText","client","twilio","phone","body","messages","create","to","from","then","message","console","log","sid","emailOpen","transporter","createTransport","service","auth","user","EMAIL","pass","EPASSWORD","use","mailOptions","html","subject","text","sendMail","error","info","messageId","emailConfirmation","emailError","module","exports"],"mappings":"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","file":"text.js","sourcesContent":["require('dotenv').config();\nconst accountSid = process.env.ACCOUNT_SID;\nconst authToken = process.env.AUTH_TOKEN;\n\nconst nodemailer = require('nodemailer');\nconst htmlToText = require('nodemailer-html-to-text').htmlToText;\nconst client = require('twilio')(accountSid, authToken);\n\nlet twilio = (phone, body) => {\n    client.messages\n        .create({\n            to: phone,\n            from: '+19082800331',\n            body: body\n        })\n        .then((message) => console.log(message.sid));\n};\n\nlet emailOpen = (phone, body) => {\n    let transporter = nodemailer.createTransport({\n        service: 'Gmail',\n        auth: {\n            user: process.env.EMAIL,\n            pass: process.env.EPASSWORD\n        }\n    });\n\n    transporter.use('compile', htmlToText());\n\n    let mailOptions = {\n        from: 'noclosedclass@gmail.com',\n        to: phone,\n        html: '<bold></bold>',\n        subject: 'Class Opened!',\n        text: body\n    };\n\n    transporter.sendMail(mailOptions, (error, info) => {\n        if (error) {\n            return console.log(error);\n        }\n        console.log('Message sent: %s', info.messageId);\n    });\n};\n\nlet emailConfirmation = (phone, body) => {\n    let transporter = nodemailer.createTransport({\n        service: 'Gmail',\n        auth: {\n            user: process.env.EMAIL,\n            pass: process.env.EPASSWORD\n        }\n    });\n\n    transporter.use('compile', htmlToText());\n\n    let mailOptions = {\n        from: 'noclosedclass@gmail.com',\n        to: phone,\n        html:'<bold></bold>',\n        subject: 'Confirmation',\n        text: body\n    };\n\n    transporter.sendMail(mailOptions, (error, info) => {\n        if (error) {\n            return console.log(error);\n        }\n        console.log('Message sent: %s', info.messageId);\n    });\n};\n\nlet emailError = (phone, body) => {\n    let transporter = nodemailer.createTransport({\n        service: 'Gmail',\n        auth: {\n            user: process.env.EMAIL,\n            pass: process.env.EPASSWORD\n        }\n    });\n\n    let mailOptions = {\n        from: 'noclosedclass@gmail.com',\n        to: phone,\n        html:'<bold></bold>',\n        subject: 'Uh oh',\n        text: body\n    };\n\n    transporter.sendMail(mailOptions, (error, info) => {\n        if (error) {\n            return console.log(error);\n        }\n        console.log('Message sent: %s', info.messageId);\n    });\n};\n\nmodule.exports = {\n    emailOpen,\n    emailConfirmation,\n    emailError,\n    twilio\n};"]}