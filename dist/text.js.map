{"version":3,"sources":["../text.js"],"names":["require","config","accountSid","process","env","ACCOUNT_SID","authToken","AUTH_TOKEN","nodemailer","htmlToText","client","transporter","createTransport","service","auth","user","EMAIL","pass","EPASSWORD","twilio","phone","body","messages","create","to","from","then","message","console","log","sid","twilioBatch","emailOpen","use","mailOptions","html","subject","text","sendMail","error","info","emailConfirmation","close","emailError","emailContact","name","email","module","exports"],"mappings":"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","file":"text.js","sourcesContent":["require('dotenv').config();\nconst accountSid = process.env.ACCOUNT_SID;\nconst authToken = process.env.AUTH_TOKEN;\n\nconst nodemailer = require('nodemailer');\nconst htmlToText = require('nodemailer-html-to-text').htmlToText;\nconst client = require('twilio')(accountSid, authToken);\n\nlet transporter = nodemailer.createTransport({\n    service: 'Gmail',\n    auth: {\n        user: process.env.EMAIL,\n        pass: process.env.EPASSWORD\n    }\n});\n\nlet twilio = (phone, body) => {\n    client.messages\n        .create({\n            to: phone,\n            from: '+19082800331',\n            body: body\n        })\n        .then((message) => console.log(message.sid));\n};\n\nlet twilioBatch = (phone, body) => {\n    client.messages\n        .create({\n            to: phone,\n            from: '+19082800331',\n            body: `Your classes have been added: \\n ${body}`\n        })\n        .then((message) => console.log(message.sid));\n};\n\nlet emailOpen = (phone, body) => {\n    transporter.use('compile', htmlToText());\n\n    let mailOptions = {\n        from: 'noclosedclass@gmail.com',\n        to: phone,\n        html: '<bold></bold>',\n        subject: 'Class Opened!',\n        text: body\n    };\n\n    transporter.sendMail(mailOptions, (error, info) => {\n        if (error) {\n            return console.log(error);\n        }\n        // console.log('Message sent: %s', info.messageId);\n    });\n};\n\nlet emailConfirmation = (phone, body) => {\n    transporter.use('compile', htmlToText());\n\n    let mailOptions = {\n        from: 'noclosedclass@gmail.com',\n        to: phone,\n        html:'<bold></bold>',\n        subject: 'Confirmation',\n        text: body\n    };\n\n    transporter.sendMail(mailOptions, (error, info) => {\n        if (error) {\n            return console.log(error);\n        }\n        // console.log('Message sent: %s', info.messageId);\n        transporter.close();\n    });\n};\n\nlet emailError = (phone, body) => {\n    let mailOptions = {\n        from: 'noclosedclass@gmail.com',\n        to: phone,\n        html:'<bold></bold>',\n        subject: 'Uh oh',\n        text: body\n    };\n\n    transporter.sendMail(mailOptions, (error, info) => {\n        if (error) {\n            return console.log(error);\n        }\n        // console.log('Message sent: %s', info.messageId);\n        transporter.close();\n    });\n};\n\nlet emailContact = (name, email, subject, body) => {\n    let mailOptions = {\n        from: name + ' &lt;' + email + '&gt;',\n        to: `noclosedclass@gmail.com`,\n        subject: subject,\n        text: body\n    };\n\n    transporter.sendMail(mailOptions, (error, info) => {\n        if (error) {\n            return console.log(error);\n        }\n        // console.log('Message sent: %s', info.messageId);\n        transporter.close();\n    });\n};\n\n// let hello = [`1`, `\\n 2`, `\\n 4`, `\\n 6`, `\\n 7`];\n//\n// twilioBatch('3475276604', hello);\n\nemailConfirmation('7188696520@tmomail.net', 'testing');\n\nmodule.exports = {\n    emailOpen,\n    emailConfirmation,\n    emailError,\n    emailContact,\n    twilio\n};"]}